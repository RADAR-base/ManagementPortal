import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.dsl.KotlinVersion
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'org.jetbrains.dokka'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

description = 'Library for authentication and authorization of JWT tokens issued by the RADAR platform'

dependencies {
    api ("com.auth0:java-jwt:${Versions.oauthJwt}")
    api(platform("org.jetbrains.kotlinx:kotlinx-coroutines-bom:${Versions.coroutines}"))
    api("org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.coroutines}")

    implementation("org.radarbase:radar-commons-kotlin:${Versions.radarCommons}")

    implementation(platform("io.ktor:ktor-bom:${Versions.ktor}"))
    implementation("io.ktor:ktor-client-core:${Versions.ktor}")
    implementation("io.ktor:ktor-client-cio:${Versions.ktor}")
    implementation("io.ktor:ktor-client-content-negotiation:${Versions.ktor}")
    implementation("io.ktor:ktor-serialization-kotlinx-json:${Versions.ktor}")

    implementation ("org.slf4j:slf4j-api:${Versions.slf4j}")

    testImplementation ("org.junit.jupiter:junit-jupiter-api:${Versions.junit}")
    testImplementation ("com.github.tomakehurst:wiremock:${Versions.wiremock}")
    testImplementation ("org.hamcrest:hamcrest:${Versions.hamcrest}")

    testRuntimeOnly ("ch.qos.logback:logback-classic:${Versions.logback}")
    testRuntimeOnly ("org.junit.jupiter:junit-jupiter-engine:${Versions.junit}")

}

tasks.withType(KotlinCompile).configureEach {
    compilerOptions {
        jvmTarget = JvmTarget.JVM_11
        apiVersion = KotlinVersion.KOTLIN_1_8
        languageVersion = KotlinVersion.KOTLIN_1_8
    }
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
    useJUnitPlatform()
}

tasks.register('ghPagesJavadoc', Copy) {
    from file("$buildDir/dokka/javadoc")
    into file("$rootDir/public/radar-auth-javadoc")
    dependsOn(dokkaJavadoc)
}

ext.projectLanguage = "kotlin"

apply from: "$rootDir/gradle/style.gradle"
apply from: "$rootDir/gradle/publishing.gradle"
