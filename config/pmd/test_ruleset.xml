<?xml version="1.0"?>
<ruleset name="Ruleset from Codacy"
    xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

  <description>
  This ruleset was parsed from the Codacy default codestyle.
  </description>

  <rule ref="rulesets/java/logging-jakarta-commons.xml/ProperLogger"/>
  <rule ref="rulesets/java/imports.xml/DontImportJavaLang"/>
  <rule ref="rulesets/java/strings.xml/StringInstantiation"/>
  <rule ref="rulesets/java/junit.xml/SimplifyBooleanAssertion"/>
  <rule ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes"/>
  <rule ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException"/>
  <rule ref="rulesets/java/imports.xml/UnusedImports"/>
  <rule ref="rulesets/java/strings.xml/UseEqualsToCompareStrings"/>
  <rule ref="rulesets/java/basic.xml/CheckResultSet"/>
  <rule ref="rulesets/java/strings.xml/StringToString"/>
  <rule ref="rulesets/java/naming.xml/ClassNamingConventions"/>
  <rule ref="rulesets/java/design.xml/CompareObjectsWithEquals"/>
  <!-- Allow underscores in test methods <rule ref="rulesets/java/naming.xml/MethodNamingConventions"/> -->
  <rule ref="rulesets/java/naming.xml/GenericsNaming"/>
  <rule ref="rulesets/java/design.xml/LogicInversion"/>
  <rule ref="rulesets/java/naming.xml/NoPackage"/>
  <rule ref="rulesets/java/codesize.xml/ExcessiveMethodLength"/>
  <rule ref="rulesets/java/codesize.xml/NPathComplexity"/>
  <rule ref="rulesets/java/controversial.xml/OneDeclarationPerLine"/>
  <rule ref="rulesets/java/codesize.xml/ExcessiveParameterList"/>
  <rule ref="rulesets/java/controversial.xml/DefaultPackage"/>
  <rule ref="rulesets/java/imports.xml/UnnecessaryFullyQualifiedName"/>
  <rule ref="rulesets/java/junit.xml/JUnitTestsShouldIncludeAssert"/>
  <rule ref="rulesets/java/unnecessary.xml/UselessOperationOnImmutable"/>
  <rule ref="rulesets/java/basic.xml/AvoidBranchingStatementAsLastInLoop"/>
  <rule ref="rulesets/java/empty.xml/EmptyFinallyBlock"/>
  <rule ref="rulesets/java/empty.xml/EmptyIfStmt"/>
  <rule ref="rulesets/java/empty.xml/EmptyStatementNotInLoop"/>
  <rule ref="rulesets/java/empty.xml/EmptyTryBlock"/>
  <rule ref="rulesets/java/basic.xml/ExtendsObject"/>
  <rule ref="rulesets/java/design.xml/SingularField"/>
  <rule ref="rulesets/java/design.xml/SimplifyBooleanReturns"/>
  <rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause"/>
  <rule ref="rulesets/java/basic.xml/BooleanInstantiation"/>
  <rule ref="rulesets/java/basic.xml/JumbledIncrementer"/>
  <rule ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor"/>
  <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass"/>
  <rule ref="rulesets/java/basic.xml/MisplacedNullCheck"/>
  <rule ref="rulesets/java/basic.xml/CollapsibleIfStatements"/>
  <rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement"/>
  <rule ref="rulesets/java/design.xml/NonStaticInitializer"/>
  <rule ref="rulesets/java/controversial.xml/UnnecessaryConstructor"/>
  <rule ref="rulesets/java/design.xml/AvoidReassigningParameters"/>
  <rule ref="rulesets/java/basic.xml/ReturnFromFinallyBlock"/>
  <rule ref="rulesets/java/design.xml/SwitchStmtsShouldHaveDefault"/>
  <rule ref="rulesets/java/design.xml/MissingBreakInSwitch"/>
  <!-- Testing equals functions <rule ref="rulesets/java/design.xml/EqualsNull"/> -->
  <rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize"/>
  <rule ref="rulesets/java/finalizers.xml/EmptyFinalizer"/>
  <rule ref="rulesets/java/empty.xml/EmptyStatementBlock"/>
  <rule ref="rulesets/java/basic.xml/AvoidThreadGroup"/>
  <rule ref="rulesets/java/basic.xml/DontCallThreadRun"/>
  <rule ref="rulesets/java/basic.xml/BrokenNullCheck"/>
  <rule ref="rulesets/java/empty.xml/EmptyStaticInitializer"/>
  <rule ref="rulesets/java/empty.xml/EmptyInitializer"/>
  <rule ref="rulesets/java/empty.xml/EmptySwitchStatements"/>
  <rule ref="rulesets/java/empty.xml/EmptySynchronizedBlock"/>
  <rule ref="rulesets/java/basic.xml/DontUseFloatTypeForLoopIndices"/>
  <rule ref="rulesets/java/basic.xml/AvoidMultipleUnaryOperators"/>
  <rule ref="rulesets/java/basic.xml/CheckSkipResult"/>
  <rule ref="rulesets/java/unnecessary.xml/UnnecessaryReturn"/>
  <rule ref="rulesets/java/design.xml/UncommentedEmptyMethodBody"/>
  <rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions"/>
  <rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic"/>
  <rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable"/>
  <rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter"/>
  <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField"/>
  <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod"/>
  <rule ref="rulesets/java/naming.xml/PackageCase"/>
  <rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass"/>
  <rule ref="rulesets/java/basic.xml/UnconditionalIfStatement"/>
  <rule ref="rulesets/java/braces.xml/WhileLoopsMustUseBraces"/>
  <rule ref="rulesets/java/javabeans.xml/MissingSerialVersionUID"/>
  <rule ref="rulesets/java/junit.xml/JUnitSpelling"/>
  <rule ref="rulesets/java/junit.xml/JUnitStaticSuite"/>
  <rule ref="rulesets/java/junit.xml/UnnecessaryBooleanAssertion"/>
  <rule ref="rulesets/java/strings.xml/UseStringBufferLength"/>
  <rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange"/>

<!--
  Rules part of PMD and Codacy but not enabled:
  <rule ref="rulesets/java/codesize.xml/CyclomaticComplexity"/>
  <rule ref="rulesets/java/codesize.xml/ExcessiveClassLength"/>
  <rule ref="rulesets/java/codesize.xml/ExcessivePublicCount"/>
  <rule ref="rulesets/java/codesize.xml/TooManyFields"/>
  <rule ref="rulesets/java/codesize.xml/TooManyMethods"/>
  <rule ref="rulesets/java/naming.xml/ShortVariable"/>
  <rule ref="rulesets/java/naming.xml/LongVariable"/>
  <rule ref="rulesets/java/naming.xml/ShortMethodName"/>
  <rule ref="rulesets/java/naming.xml/BooleanGetMethodName"/>
  <rule ref="rulesets/java/android.xml/DoNotHardCodeSDCard"/>
  <rule ref="rulesets/java/j2ee.xml/DoNotCallSystemExit"/>
  <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons"/>
 -->
 
 <!--
  Rules part of Codacy but only part of PHPMD:
  <rule ref="rulesets/java/codesize.xml/ExcessiveClassComplexity"/> 
  <rule ref="rulesets/java/controversial.xml/Superglobals"/>
  <rule ref="rulesets/java/design.xml/ExitExpression"/>
  <rule ref="rulesets/java/design.xml/EvalExpression"/>
  <rule ref="rulesets/java/design.xml/GotoStatement"/>
  <rule ref="rulesets/java/design.xml/NumberOfChildren"/>
  <rule ref="rulesets/java/design.xml/DepthOfInheritance"/>
  <rule ref="rulesets/java/naming.xml/ConstantNamingConventions"/>
  <rule ref="rulesets/java/cleancode.xml/ElseExpression"/>
  <rule ref="rulesets/java/cleancode.xml/StaticAccess"/>
-->
</ruleset>
