os:
  - linux
services:
  - docker
language: node_js
node_js:
  - "6.10.0"
jdk:
  - oraclejdk8
sudo: false
cache:
  directories:
    - node
    - node_modules
    - $HOME/.gradle
    - $HOME/.yarn-cache
env:
  global:
    - NODE_VERSION=6.10.0
    - SPRING_OUTPUT_ANSI_ENABLED=ALWAYS
    - SPRING_JPA_SHOW_SQL=false
before_install:
  - jdk_switcher use oraclejdk8
  - java -version
  - sudo /etc/init.d/mysql stop
  - sudo /etc/init.d/postgresql stop
  # Repo for Yarn
  - curl -o- -L https://yarnpkg.com/install.sh | bash
  - export PATH=$HOME/.yarn/bin:$PATH
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16"
install:
  - yarn install
before_script:
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start
  - cp src/test/resources/config/keystore.jks src/main/resources/config/keystore.jks # we need the keystore to run our app, and we need our app to run e2e tests
  - ./gradlew bootRun &
  - sleep 60 # give spring boot some time to start
script:
  - ./gradlew test
  - yarn test
  - yarn e2e
  - ./gradlew bootRepackage -Pprod -x test
after_script:
  - ./gradlew sendCoverageToCodacy
notifications:
  webhooks:
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change]
