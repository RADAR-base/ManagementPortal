dsn: memory

serve:
  public:
    base_url: http://localhost:4433/
  admin:
    base_url: http://kratos:4434/

selfservice:
  default_browser_return_url: http://localhost:3000/
  allowed_return_urls:
    - "http://127.0.0.1:3000/"
    - "http://127.0.0.1:8080/"
    - "http://127.0.0.1:8081/"
    - "http://localhost:3000/"
    - "http://localhost:8080/"
    - "http://localhost:8081/"

  methods:
    password:
      enabled: true
    totp:
      config:
        issuer: Kratos
      enabled: true
    link:
      enabled: true

  flows:
    error:
      ui_url: http://localhost:3000/error

    settings:
      ui_url: http://localhost:3000/settings
  
    recovery:
      enabled: true
      ui_url: http://localhost:3000/recovery
      use: code

    verification:
      # our current flow necessitates that users reset their password after they activate an account in managementportal,
      # this works as verification
      ui_url: http://localhost:3000/verification
      enabled: true
      use: code
      after:
        default_browser_return_url: http://localhost:3000/consent

    logout:
      after:
        default_browser_return_url: http://localhost:3000/login

    login:
      ui_url: http://localhost:3000/login

    registration:
      ui_url: http://localhost:3000/registration
      after:
        password:
          hooks:
            - hook: session
        oidc:
          hooks:
            - hook: session

log:
  level: debug
  format: text
  leak_sensitive_values: true

hashers:
  argon2:
    parallelism: 1
    memory: 128KB
    iterations: 2
    salt_length: 16
    key_length: 16

identity:
  default_schema_id: user
  schemas:
    - id: user
      url: file:///etc/config/kratos/identities/identity.schema.user.json

courier:
  smtp:
    connection_uri: smtps://test:test@mailslurper:1025/?skip_ssl_verify=true&disable_starttls=true
    from_address: noreply@radar-base.org

oauth2_provider:
  url: http://hydra:4445