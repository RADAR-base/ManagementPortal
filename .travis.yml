dist: trusty
services:
  - docker
addons:
  firefox: latest
  apt:
    packages:
      - docker-ce # necessary for testing the Dockerfile, which is a multi-stage build see: https://github.com/travis-ci/travis-ci/issues/8181
language: java

jdk:
    - oraclejdk8

node_js:
  - "11.2.0"

cache:
  directories:
    - node
    - node_modules
    - $HOME/.yarn-cache
    - $HOME/.gradle/caches/jars-1
    - $HOME/.gradle/caches/jars-2
    - $HOME/.gradle/caches/jars-3
    - $HOME/.gradle/caches/modules-2/files-2.1/
    - $HOME/.gradle/native
    - $HOME/.gradle/wrapper

env:
  global:
    - NODE_VERSION=11.2.0
    - SPRING_OUTPUT_ANSI_ENABLED=ALWAYS
    - SPRING_JPA_SHOW_SQL=false


before_install:
#  - source ./jdk_switcher.sh
#  - jdk_switcher use oraclejdk8
  - java -version
  - sudo /etc/init.d/mysql stop
  - sudo /etc/init.d/postgresql stop
  # Repo for Yarn
  - curl -o- -L https://yarnpkg.com/install.sh | bash
  - export PATH=$HOME/.yarn/bin:$PATH

install:
  - yarn install

before_script:
  - cp src/test/resources/config/keystore.p12 src/main/resources/config/keystore.p12  # we need the keystore to run our app, and we need our app to run e2e tests
  - chmod +x src/test/bash/*.sh
  - chmod +x util/*.sh
  # Startup the application in the background and continue with the tests
  - ./gradlew bootRun 1> /dev/null &

script:
  # Make sure we wait for the application to be up, this also ensures the build is finished etc
  - ./util/wait-for-app.sh
  - ./gradlew check
  - yarn test
  - ./src/test/bash/run-e2e.sh
  - ./gradlew generateOpenApiSpec
  - ./gradlew generateJavaClient
  - killall java # stop running MP instance
  - ./src/test/bash/run-prod-e2e.sh
  - echo "include 'managementportal-client'" >> settings.gradle # make this a sub-project so we can build artifacts and javadoc easily

after_script:
  - ./gradlew sendCoverageToCodacy

deploy:
  - provider: releases
    token: ${GH_TOKEN}
    file_glob: true
    file:
      - "build/libs/*.war"
      - "build/swagger-spec/*.json"
    cleanup: false
    on:
      tags: true
  - provider: script
    script: ./util/update-gh-pages-docs.sh
    cleanup: false
    on:
      tags: true
  - provider: script
    script: ./gradlew artifactoryPublish
    cleanup: false
    on:
      branch: dev
  - provider: script
    script: ./gradlew bintrayUpload
    cleanup: false
    on:
      tags: true
notifications:
  webhooks:
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change]
