plugins {
    // Apply the java plugin to add support for Java
    id 'java-library'
    id 'pmd'
    id 'checkstyle'
    id 'maven-publish'
}

sourceCompatibility = 1.8

ext {
    jacksonVersion = '2.9.7'

    moduleDescription = 'Library for authentication and authorization of JWT tokens issued by the RADAR platform'
}

repositories {
    jcenter()
    mavenLocal()
}

dependencies {
    api group: 'com.auth0', name: 'java-jwt', version: '3.2.0'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation group: 'com.fasterxml.jackson.core' , name: 'jackson-databind' , version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: jacksonVersion

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '2.20.0'
    testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.16.0'

    testRuntimeOnly group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
}

ext.sharedManifest = manifest {
    attributes("Implementation-Title": project.name,
            "Implementation-Version": version)
}

jar {
    manifest.from sharedManifest
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    manifest.from sharedManifest
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    manifest.from sharedManifest
}

publishing {
    publications {
        RadarAuthPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                description = moduleDescription
                name = project.name
                url = githubUrl
            }

            pom.withXml {
                asNode().children().last() + pomConfig
            }
        }
    }
}

bintray {
    user project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    override false
    publications 'RadarAuthPublication'
    pkg {
        repo = project.group
        name = project.name
        userOrg = 'radar-cns'
        desc = moduleDescription
        licenses = ['Apache-2.0']
        websiteUrl = website
        issueTrackerUrl = issueUrl
        vcsUrl = githubUrl
        githubRepo = githubRepoName
        githubReleaseNotesFile = 'README.md'
        version {
            name = project.version
            desc = moduleDescription
            vcsTag = System.getenv('TRAVIS_TAG')
            released = new Date()
        }
    }
}

artifactoryPublish {
    publications 'RadarAuthPublication'
}
