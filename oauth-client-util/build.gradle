plugins {
    // Apply the java plugin to add support for Java
    id 'java-library'
    id 'idea'
    id 'pmd'
    id 'checkstyle'
    id 'maven-publish'
}

sourceCompatibility = 1.8

ext {
    okhttpVersion = '3.11.0'
    junitVersion = '4.12'
    jacksonVersion = '2.9.7'

    moduleDescription = 'This library can be used by client applications that want to use the client_credentials OAuth2 flow. It will manage getting the token and renewing it when necessary.'
}

repositories {
    jcenter()
    mavenCentral()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}

dependencies {
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: okhttpVersion
    implementation group: 'com.fasterxml.jackson.core' , name: 'jackson-databind' , version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: jacksonVersion

    testCompile group: 'junit', name: 'junit', version: junitVersion
    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '2.20.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.8.47'
    testCompile 'org.glassfish.jersey.core:jersey-common:2.22.2'
    testRuntimeOnly group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
}

ext.sharedManifest = manifest {
    attributes("Implementation-Title": project.name,
            "Implementation-Version": version)
}

jar {
    manifest.from sharedManifest
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    manifest.from sharedManifest
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    manifest.from sharedManifest
}

publishing {
    publications {
        RadarOAuthClientPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                description = moduleDescription
                name = project.name
                url = githubUrl
            }

            pom.withXml {
                asNode().children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    override = false
    publications = ['RadarOAuthClientPublication']
    pkg {
        repo = project.group
        name = project.name
        userOrg = 'radar-cns'
        desc = moduleDescription
        licenses = ['Apache-2.0']
        websiteUrl = website
        issueTrackerUrl = issueUrl
        vcsUrl = githubUrl
        githubRepo = githubRepoName
        githubReleaseNotesFile = 'README.md'
        version {
            name = project.version
            desc = moduleDescription
            vcsTag = System.getenv('TRAVIS_TAG')
            released = new Date()
        }
    }
}

artifactoryPublish {
    publications 'RadarOAuthClientPublication'
}
